BrowserCMS Developer Guide
==========================

== Introduction

This guide covers how to use the tools that come with BrowserCMS to extend the functionality of your BrowserCMS site.  This guide will cover:

* What content blocks and portlets are and how they work
* How to create custom content blocks
* How to create custom portlets
* How to create custom page templates
* How to create custom page partials
* How to install and use BrowserCMS modules
* How to create friendly URLs for pages

== Content Blocks

Content Blocks are the basic unit used to add content to pages in a BrowserCMS site.  There are several pre-built content types that are part of BrowserCMS core.  The most commonly used one is the HtmlBlock content type, so we will use that as a starting example.

If you look at the HtmlBlock model in BrowserCMS core, you will see that it is an ActiveRecord model, just like any model you create in a Rails application.  It also calls the acts_as_content_block method, which just sets up several link:/doc/app/classes/Cms/Behaviors.html[Behaviors] on the model.  One of the key Behaviors to understand is the link:/doc/app/classes/Cms/Behaviors/Rendering.html[Rendering] behavior.  Essentially what this behavior does is to allow your model to act as a mini-controller.  This is the same thing conceptually as link:http://yehudakatz.com/2007/09/06/merbs-parts-are-pretty-rocking-too/[Merb Parts] or link:http://cells.rubyforge.org[Rails Cells].  

In the BrowserCMS implementation, first the render method of the object is called, which is like an action.  This is where instance variables are set.  In the case of an HtmlBlock, there are no other instance variables to set up, so this step is just skipped.  It is similar to a controller action that has no action method, it just goes straight to the view.

The view is the render template, which is inside the cms/html_blocks directory in the view path.  If you look in the render template, you will see all it does is print the value of @content_block.content.  Content is the name of the property that holds the HTML content.
